# schema.graphql
type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post!]
}

type Post {
  id: ID!
  title: String!
  content: String!
  published: Boolean!
  author: User!
  comments: [Comment!]
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}

type Query {
  users: [User!]!
  user(id: ID!): User
  posts: [Post!]!
  post(id: ID!): Post
  comments: [Comment!]!
}

type Mutation {
  createUser(name: String!, email: String!): User!
  updateUser(id: ID!, name: String, email: String): User
  deleteUser(id: ID!): User
  
  createPost(title: String!, content: String!, published: Boolean!, authorId: ID!): Post!
  updatePost(id: ID!, title: String, content: String, published: Boolean): Post
  deletePost(id: ID!): Post
  
  createComment(text: String!, authorId: ID!, postId: ID!): Comment!
  updateComment(id: ID!, text: String): Comment
  deleteComment(id: ID!): Comment
}

type Subscription {
  userCreated: User
  postCreated: Post
  commentCreated: Comment
}